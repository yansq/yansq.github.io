{"meta":{"title":"Felz33's Blog","subtitle":null,"description":null,"author":"Felz33","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"每月分享 2018.10","slug":"share-10-2018","date":"2018-11-01T04:40:09.000Z","updated":"2018-11-01T04:57:32.392Z","comments":true,"path":"2018/11/01/share-10-2018/","link":"","permalink":"http://yoursite.com/2018/11/01/share-10-2018/","excerpt":"","text":"10.25 此时做出任何抉择，都会彻底改变阿里巴巴的历史，但历史又只在彼时彼刻给阿里巴巴一次机会，开弓没有回头箭。所有人的目光都看向王坚。王坚说了两个字：“飞天！”。 摘自: \b史中-《阿里云这群疯子》 飞儿乐队更换新主唱郑睿，为浙江传媒音乐学院音乐剧专业学生。 10.26 在反思过程中，避免使用“我们当初其实可以”、“如果”等词句。兹韦贝克提醒说，\b\b建立时间轴的时候，要专注在问题如何发生，而不是为什么发生。因为，询问“如何发生”能够招出导致成功或失败的条件，执着于“为什么”会让我们纠结于偏见。 摘自 李翔知识内参—《方法：\b团队如何更好地从反思中学习》 就像反思自己为何在大学里一事无成一样，如果纠结于\b\b各类假设，例如“为什么不在大一开始准备考研”,”为什么不早点攒钱买把Lowden吉他”等等毫无意义。首先中国孩子的想象力本身贫乏，只想象结果不想象过程有何意义；其次这样的反思也得不到任何成效。但当从时间轴的方向来考虑的时候，就会发现造成问题的主要原因是视野的狭窄，\b周遭人的同化\b，缺乏对全局的掌控力和意志力等等。那么在你筹备养老的时候，就可以用上这些经验\u001c，避免犯下同样的错误。 10.27 中国人这几十年的生活，是没有细节的生活。他（她）永远在一些概念中间，从这个概念到另一个概念，在概念中跳跃。可能全世界大部分国家的人都体会不到，中国人所经历的那种失忆的痛苦，“中国这几十年三代人同时在经历这么一个过程，非常残酷的一个过程，我们\b拼命地想抹掉旧的记忆，建立一种新的记忆。” 摘自 李翔知识内参—《艺术家：中国人要具备很强的失忆能力》 人难以采用马尔科夫链思维。所谓马尔科夫链，简单地说，指未来与现在有关，与历史无关。…人类总是追求前后一致，首尾协调，逻辑一贯。人类行为通常是历史的产物、习惯的奴隶。这是人类面对未知的直觉反应。 摘自 王烁—大学 问—《机器人崛起时代的生存策略》 直觉是资源是优势，需要日常的储备；而产生反直觉的念头亦是一种直觉。 10.31 那么我们又如何呢，我们得到了些什么呢？对于一种鲜花，除了各种感觉的愉悦，我们发现了更多的东西：一种考验美的坩埚，如果不是对艺术的话，这或许是对生命意义的一瞥。注视着一朵花，你看到了自然双重属性的那个核心，这就是创造与分解相互竞争的两种能量，就是复杂形式的螺旋上升和从这里拉开的潮涨潮落。阿波罗和狄俄倪索斯就是古希腊人对大自然的这两副面孔给予的命名。在大自然中，它们这种斗争的最鲜明或最令人痛苦的体现就是花之美和这种美的迅速消逝。既有秩序的对所有偶然性的胜利，也有秩序的令人愉快的放弃；既有艺术的完美，也有大自然盲目的流溢。在某种意义上，是既有出类拔萃的超越，又有平平常常出的必须。能不能说，就在这里，就在一朵花中，有着生命的意义呢？ 摘自 《植物的欲望》 in response to stress \b应对压力","categories":[],"tags":[{"name":"分享","slug":"分享","permalink":"http://yoursite.com/tags/分享/"}]},{"title":"React中的HTML转义","slug":"react-escape-character","date":"2018-07-21T06:21:05.000Z","updated":"2018-07-21T06:38:22.641Z","comments":true,"path":"2018/07/21/react-escape-character/","link":"","permalink":"http://yoursite.com/2018/07/21/react-escape-character/","excerpt":"","text":"摘自《深入React技术栈》 React会将所有要显示到DOM的字符串转义，防止XSS。所以，如果JSX中含有转义后的实体字符，比如&amp; copy; (©)，则最后DOM中不会正确显示，因为React中自动把&amp; copy；中的特殊字符转义了。解决办法为： 直接使用UTF-8字符 ©（在mac中使用 option 或 option+shift，再加其它键就可以快速输入符号，列表见Mac用Option键输入特殊符号 - 简书）； 使用对应字符的Unicode编码； 使用数组组装&lt;div&gt;{[&#39;cc &#39;,&lt;span&gt;&amp;copy;&lt;/span&gt;, &#39; 2015&#39;]}&lt;/div&gt;; 直接插入原始的HTML。此外，React提供了dangerouslySetInnerHTML属性，它的作用就是避免React转义字符，在确定必要的情况下可以使用它： 1&lt;div dangerouslySetInnerHTML=&#123;&#123;__html: 'cc &amp;copy; 2015'&#125;&#125; /&gt; PS：hexo中只能在代码段中使用双大括号，不然会报未知错误，被坑了一把。","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/前端/"}]},{"title":"Vim的轻量级使用--cVim","slug":"cVim","date":"2018-07-12T15:34:38.000Z","updated":"2018-07-12T16:07:49.469Z","comments":true,"path":"2018/07/12/cVim/","link":"","permalink":"http://yoursite.com/2018/07/12/cVim/","excerpt":"","text":"今天偶然间尝试了一下Vim，感受到这一体系的为例，但想要真正通过Vim提升编程效率，需要经过大量的学习和训练。 就在我浏览网络寻找安慰感的时候，发现chrome上也有诸多提供Vim操作方式的插件，试了一下以后发现，这是一个学习成本极低却又能显著提升效率的东西，十分适合在台式电脑上，或是笔记本外接键盘时使用（鼠标这个东西真的不友好~）。 这些插件的功能大同小异，这里就介绍一下我选用的cVim插件的一些按键方案。 网页滚动 j：下滚； k：上滚； h：左滚； l：右滚； e || u：上滚半页 （应该是没区别~） d：下滚半页 gg： 上滚到顶 G：下滚到底和Vim的操作基本一样，就是滚半屏少了ctrl的组合键。 输入使用gi便可切换到第一个输入栏，之后可以使用Tab键切换输入栏，使用Esc退出选中状态。 选中按下v，进入可视化模式，使用hjkl四个方向键控制游标到起始位置，再按下v，控制游标选取需要选中的部分，之后就可以对选中部分进行各种操作，比如: y：复制； p：Google搜索等等 点击按下f之后，页面中所有的按钮或是链接旁就会显示快捷键，按下快捷键就可以打开对应的链接，输入小写是在当前页打开链接，大写则是在新标签页打开链接（可以是f的大小写，也可以是链接快捷键的大小写）。q的用法与f完全相同，只是f模拟click事件，q模拟hover事件。如果要一次打开多个网页可以使用mf，我个人是几乎用不到这个功能。 Tab切换使用以下快捷键可以对浏览器ode标签进行操作： K：下一个Tab； J: 上一个Tab； x：关闭当前Tab； X：打开最近关闭的Tab； gp：固定/取消固定； t：新标签 （感觉这里略有些奇怪，因为讲道理k是上方向，j是下方向啊，但调过来更奇怪。。。） （gp就是RTS游戏的编队操作了，感觉专门留一个网页存好常用页面然后刷刷刷切换还是挺带感的，然并卵） 浏览器功能 H：后退； L：前进； r：刷新 链接操作及搜索 gy + 快捷键：复制指定链接地址； yy：复制当前网址； a：开新的Google； /：搜索； b：搜书签； l：搜历史； :：命令行 还有一些其它的就不列举了，目前还有一个想知道的是怎么把光标定到地址栏并选中当前地址，似乎并没有这个的快捷键啊。","categories":[],"tags":[{"name":"效率","slug":"效率","permalink":"http://yoursite.com/tags/效率/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-07-08T12:45:55.914Z","updated":"2018-07-08T12:45:55.914Z","comments":true,"path":"2018/07/08/hello-world/","link":"","permalink":"http://yoursite.com/2018/07/08/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}