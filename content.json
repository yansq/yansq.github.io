{"meta":{"title":"Felz33's blog","subtitle":null,"description":null,"author":"Felz33","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"flypy","date":"2019-03-25T07:49:54.701Z","updated":"2019-03-31T07:28:24.964Z","comments":true,"path":"2019/03/25/flypy/","link":"","permalink":"http://yoursite.com/2019/03/25/flypy/","excerpt":"","text":"是时候抛弃你的全拼输入法了 — 小鹤音形入门为什么要学习新的中文打字方案使用全拼打字的时候，敲击键盘久了手会很累。虽然现在主流输入法都支持了云词库功能，使得简拼打字成为了可能，但是我对如何维护一份可用性高的词库没有概念，感觉还是不够保险。并且尽管使用了词库还是会遇到一些在一堆候选词中找花眼的情况。基于以上情况，我准备着手寻找一种新的打字方案。 五笔应该是目前公认的最好的中文输入方法，但是五笔的学习成本实在是过于高昂。在一番调研后，我最终选择了小鹤音形的方案。经过一段时间的练习，我算是基本掌握了这一方案，你看到的这篇文章也是全程用小鹤音形输入的。 小鹤音形原理小鹤音形采用了字音加字形的方式设计，其中字音部分采用了双拼方案，双拼码表也是小鹤自带的。双拼的基本原理，大致就是根据不同双拼方案的码表，将每一个声母和韵母分别映射到键盘的一个特定的键，这样输入两个字母就可以打出任意一个字的拼音；字形部分被称为“鹤形”，截取了每个字的首末两部分的笔画，分别用特定的键对应，作为输入。因此在小鹤音形当中，每个字的基本拼写方式是：2个字母的声码 + 2个字母的形码，一共四个字母。 为了便于理解，下面附上一些例子：首先是双拼：例如拼音一词，使用全拼打的话应该是pinyin，而如果使用小鹤双拼部分的话，就是pbyb，其中p和y与全拼并无区别，而in这个韵母在小鹤双拼中对应的是b，这样就减少了打字是的输入。 接下来是双形：例如打拼这一个字，如果我们只使用pb来输入的话，还是会有很多同音字，例如品，那么这时候就是双形发挥作用的时候了。拼的首末两部分别是“扶手旁”和“开”字，在鹤形中分别对应f（扶手旁的扶字的声母）和k（开的声母），所以只要输入pbfk就可以得到唯一的拼字。 看到这里，你可能会有一个疑问，这样一个字要输入四个字母，有时候比全拼输入的还要多，真的打得快吗？ 在小鹤音形中，形码只是作为辅助，用来在同音字中确定你想要的那个字。像是输入词组的话，基本上不会有同音的出现，所以在很多时候其实不需要输入形码。 另外，小鹤音形也有简化的输入方式，例如打三个字的词，可以打前两个字的声母加上第三个字的声母和韵母，例如输入法，可以用urfa输入。在打一些单字的时候，输入第一个形码后就已经可以确定唯一的字了，这也变相减轻了一些记忆形码的负担。 学习路线小鹤音形的学习，建议先从小鹤双拼开始，然后再慢慢过渡到音形，整体的学习曲线还是相对平滑的。 双拼想要学习新的输入方案，首先要做的就是配置输入法，目前主流的拼音输入法例如谷歌、搜狗等都支持了小鹤双拼的方案，直接拿来用即可。 双拼的学习只有练习这一条路可走，建议把你电脑和手机上的其他输入方案全卸了，只用双拼来完成输入工作。经过几天的阵痛期之后，相信你已经可以慢慢地脱离码表完成输入了，这代表你已经在这一方案上存活了下来，剩下的无非就是增强熟练度和提高速度了。 双形当你已经能够熟练使用双拼想要进一步学习双形的时候，你可能就需要更换一个输入法了，因为当前同时支持双拼和双形的输入法并不是太多。 Windows和安卓系统下的输入法都可以在小鹤的官网下到。 IOS平台需要在商店下载iRime输入法，然后导入官方网盘上的配置。 Mac OS上可以建议下载鼠须管，然后导入官方网盘配置即可。 双形部分看似很难，但其实要记的东西比双拼少了很多，像是偏旁什么的基本上都是根据直觉来就好，剩下一些比较反直觉和较偏的部分在平常使用中加深印象就好了。 双形的全部规则见官网对应页面。 另外官网上还有一个可以对字词进行查询的页面，我习惯把这个页面用 cVim 插件的gp命令固定在我的浏览器上，当遇到打不出来的字的时候，直接切换到这个页面上查询就好。 享受打字！","categories":[],"tags":[]},{"title":"每月分享 2018.10","slug":"share-10-2018","date":"2018-11-01T04:40:09.000Z","updated":"2018-11-01T04:57:32.392Z","comments":true,"path":"2018/11/01/share-10-2018/","link":"","permalink":"http://yoursite.com/2018/11/01/share-10-2018/","excerpt":"","text":"10.25 此时做出任何抉择，都会彻底改变阿里巴巴的历史，但历史又只在彼时彼刻给阿里巴巴一次机会，开弓没有回头箭。所有人的目光都看向王坚。王坚说了两个字：“飞天！”。 摘自: \b史中-《阿里云这群疯子》 飞儿乐队更换新主唱郑睿，为浙江传媒音乐学院音乐剧专业学生。 10.26 在反思过程中，避免使用“我们当初其实可以”、“如果”等词句。兹韦贝克提醒说，\b\b建立时间轴的时候，要专注在问题如何发生，而不是为什么发生。因为，询问“如何发生”能够招出导致成功或失败的条件，执着于“为什么”会让我们纠结于偏见。 摘自 李翔知识内参—《方法：\b团队如何更好地从反思中学习》 就像反思自己为何在大学里一事无成一样，如果纠结于\b\b各类假设，例如“为什么不在大一开始准备考研”,”为什么不早点攒钱买把Lowden吉他”等等毫无意义。首先中国孩子的想象力本身贫乏，只想象结果不想象过程有何意义；其次这样的反思也得不到任何成效。但当从时间轴的方向来考虑的时候，就会发现造成问题的主要原因是视野的狭窄，\b周遭人的同化\b，缺乏对全局的掌控力和意志力等等。那么在你筹备养老的时候，就可以用上这些经验\u001c，避免犯下同样的错误。 10.27 中国人这几十年的生活，是没有细节的生活。他（她）永远在一些概念中间，从这个概念到另一个概念，在概念中跳跃。可能全世界大部分国家的人都体会不到，中国人所经历的那种失忆的痛苦，“中国这几十年三代人同时在经历这么一个过程，非常残酷的一个过程，我们\b拼命地想抹掉旧的记忆，建立一种新的记忆。” 摘自 李翔知识内参—《艺术家：中国人要具备很强的失忆能力》 人难以采用马尔科夫链思维。所谓马尔科夫链，简单地说，指未来与现在有关，与历史无关。…人类总是追求前后一致，首尾协调，逻辑一贯。人类行为通常是历史的产物、习惯的奴隶。这是人类面对未知的直觉反应。 摘自 王烁—大学 问—《机器人崛起时代的生存策略》 直觉是资源是优势，需要日常的储备；而产生反直觉的念头亦是一种直觉。 10.31 那么我们又如何呢，我们得到了些什么呢？对于一种鲜花，除了各种感觉的愉悦，我们发现了更多的东西：一种考验美的坩埚，如果不是对艺术的话，这或许是对生命意义的一瞥。注视着一朵花，你看到了自然双重属性的那个核心，这就是创造与分解相互竞争的两种能量，就是复杂形式的螺旋上升和从这里拉开的潮涨潮落。阿波罗和狄俄倪索斯就是古希腊人对大自然的这两副面孔给予的命名。在大自然中，它们这种斗争的最鲜明或最令人痛苦的体现就是花之美和这种美的迅速消逝。既有秩序的对所有偶然性的胜利，也有秩序的令人愉快的放弃；既有艺术的完美，也有大自然盲目的流溢。在某种意义上，是既有出类拔萃的超越，又有平平常常出的必须。能不能说，就在这里，就在一朵花中，有着生命的意义呢？ 摘自 《植物的欲望》 in response to stress \b应对压力","categories":[],"tags":[{"name":"分享","slug":"分享","permalink":"http://yoursite.com/tags/分享/"}]},{"title":"React中的HTML转义","slug":"react-escape-character","date":"2018-07-21T06:21:05.000Z","updated":"2018-07-21T06:38:22.641Z","comments":true,"path":"2018/07/21/react-escape-character/","link":"","permalink":"http://yoursite.com/2018/07/21/react-escape-character/","excerpt":"","text":"摘自《深入React技术栈》 React会将所有要显示到DOM的字符串转义，防止XSS。所以，如果JSX中含有转义后的实体字符，比如&amp; copy; (©)，则最后DOM中不会正确显示，因为React中自动把&amp; copy；中的特殊字符转义了。解决办法为： 直接使用UTF-8字符 ©（在mac中使用 option 或 option+shift，再加其它键就可以快速输入符号，列表见Mac用Option键输入特殊符号 - 简书）； 使用对应字符的Unicode编码； 使用数组组装&lt;div&gt;{[&#39;cc &#39;,&lt;span&gt;&amp;copy;&lt;/span&gt;, &#39; 2015&#39;]}&lt;/div&gt;; 直接插入原始的HTML。此外，React提供了dangerouslySetInnerHTML属性，它的作用就是避免React转义字符，在确定必要的情况下可以使用它： 1&lt;div dangerouslySetInnerHTML=&#123;&#123;__html: 'cc &amp;copy; 2015'&#125;&#125; /&gt; PS：hexo中只能在代码段中使用双大括号，不然会报未知错误，被坑了一把。","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/tags/前端/"}]},{"title":"Vim的轻量级使用--cVim","slug":"cVim","date":"2018-07-12T15:34:38.000Z","updated":"2018-07-12T16:07:49.469Z","comments":true,"path":"2018/07/12/cVim/","link":"","permalink":"http://yoursite.com/2018/07/12/cVim/","excerpt":"","text":"今天偶然间尝试了一下Vim，感受到这一体系的为例，但想要真正通过Vim提升编程效率，需要经过大量的学习和训练。 就在我浏览网络寻找安慰感的时候，发现chrome上也有诸多提供Vim操作方式的插件，试了一下以后发现，这是一个学习成本极低却又能显著提升效率的东西，十分适合在台式电脑上，或是笔记本外接键盘时使用（鼠标这个东西真的不友好~）。 这些插件的功能大同小异，这里就介绍一下我选用的cVim插件的一些按键方案。 网页滚动 j：下滚； k：上滚； h：左滚； l：右滚； e || u：上滚半页 （应该是没区别~） d：下滚半页 gg： 上滚到顶 G：下滚到底和Vim的操作基本一样，就是滚半屏少了ctrl的组合键。 输入使用gi便可切换到第一个输入栏，之后可以使用Tab键切换输入栏，使用Esc退出选中状态。 选中按下v，进入可视化模式，使用hjkl四个方向键控制游标到起始位置，再按下v，控制游标选取需要选中的部分，之后就可以对选中部分进行各种操作，比如: y：复制； p：Google搜索等等 点击按下f之后，页面中所有的按钮或是链接旁就会显示快捷键，按下快捷键就可以打开对应的链接，输入小写是在当前页打开链接，大写则是在新标签页打开链接（可以是f的大小写，也可以是链接快捷键的大小写）。q的用法与f完全相同，只是f模拟click事件，q模拟hover事件。如果要一次打开多个网页可以使用mf，我个人是几乎用不到这个功能。 Tab切换使用以下快捷键可以对浏览器ode标签进行操作： K：下一个Tab； J: 上一个Tab； x：关闭当前Tab； X：打开最近关闭的Tab； gp：固定/取消固定； t：新标签 （感觉这里略有些奇怪，因为讲道理k是上方向，j是下方向啊，但调过来更奇怪。。。） （gp就是RTS游戏的编队操作了，感觉专门留一个网页存好常用页面然后刷刷刷切换还是挺带感的，然并卵） 浏览器功能 H：后退； L：前进； r：刷新 链接操作及搜索 gy + 快捷键：复制指定链接地址； yy：复制当前网址； a：开新的Google； /：搜索； b：搜书签； l：搜历史； :：命令行 还有一些其它的就不列举了，目前还有一个想知道的是怎么把光标定到地址栏并选中当前地址，似乎并没有这个的快捷键啊。","categories":[],"tags":[{"name":"效率","slug":"效率","permalink":"http://yoursite.com/tags/效率/"}]},{"title":"使用Scrum进行个人时间规划","slug":"scrum-in-daily-schedule","date":"2018-07-08T14:22:58.000Z","updated":"2018-07-08T14:48:13.722Z","comments":true,"path":"2018/07/08/scrum-in-daily-schedule/","link":"","permalink":"http://yoursite.com/2018/07/08/scrum-in-daily-schedule/","excerpt":"","text":"Scrum即迭代式增量软件开发过程，通常用于敏捷软件开发。Scrum包括了一系列事件和预定义角色的过程骨架。虽然Scrum是为管理软件开发项目而开发的，但它也可以用来作为个人的计划管理方法，本文将探讨Scrum在自我量化管理中的实践，因此介绍的概念、流程等会与传统Scrum有所出入😆 Scrum一般以两个礼拜作为一个迭代周期，下面将按照时间线介绍一个迭代周期内的活动： 1.用户故事（User Story）编写用户故事，使用what-why的格式，以下是一个例子： 12I want my Rocket to mover back and forth when I pass left and right arrowsso that I can avoid asteroids 用户故事池的容量需要至少满足接下来两个迭代周期的工作量。 2.用户故事改良（Product Backlog Refinement）改良一般在上一个迭代末进行，用于对用户故事进行评估。你可以适当地进行调研，清楚地了解每个用户故事的需求。 之后你需要判断每个用户故事的难易度，通常选取一个用户故事将其难易度为“4”，然后根据此用户故事指定其他故事的难易度。需要注意的是，难易度的值必须为2的n次。你可以根据以往的经验可以判断出自己在一个迭代周期内大致可以完成多少难易度的工作量，以及平均每天可以完成的难易度值，如果一个用户故事的难易度超出了你一天的工作量，那么就应该将该用户故事细分拆小。 然后量化评判每个用户故事的价值，将用户故事的价值除以难易度，所得的即为该用户故事的性价比。 值得一提的是，如果你对一个用户故事没有把握，很难估计它的难易度时，你应当尽量地将这个故事的难易度设小，这样就会避免你在一个迭代周期中只完成了很少的难易度，然后影响接下来几个周期的工作量布置的的情况。 3.（Iteration Planning Meeting）这个阶段设立在每个迭代周期的最开始，在这个阶段，你应当确定在本迭代周期内，你需要完成哪些用户故事，以及如何完成。 如无特殊情况，例如某一用户故事的开展需要以另一个用户故事的完成为前提，你应该从用户故事池中按性价比选取故事，直到选取的用户故事的难易度的综合达到你一个迭代周期中所能完成的难易度的值为止。 之后就应该想想你应该用哪些方式来完成自己的用户故事，并制定具体的计划。 4.回顾（Iteration Retrospective）在每个迭代周期结束时，记录在此周期中完成的总难易度，回顾自己的工作，进行反思和总结。 5.每日站会（Daily Scrum）每天早上，在同一时间同一地点，问自己三个问题🤔：昨天做完了什么（做完指的是全部完成！），今天做什么，遇到了什么困难和障碍，然后将自己的进度更新到scrum board上。 6.Scrum白板（Scrum Board）当然可以用笔记本或者备忘录、电子笔记等等替代，用于展示用户故事的完成进度，保证自己每天更新Scrum白板，并且能经常看到它。 最后提一句，Scrum是很累的，所以量力而行👻。","categories":[],"tags":[{"name":"效率","slug":"效率","permalink":"http://yoursite.com/tags/效率/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-07-08T12:45:55.914Z","updated":"2018-07-08T12:45:55.914Z","comments":true,"path":"2018/07/08/hello-world/","link":"","permalink":"http://yoursite.com/2018/07/08/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}